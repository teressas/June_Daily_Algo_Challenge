function solution(a) {
    // have 2 pointers, 1 start at beg, 1 start at end of arr
    // have b arr to store result
    // loop through arr as long as a is not greater than b 
    // if start point < end pointer, add start to b
    // else if end > start add end to b
    let start = 0
    let end = a.length - 1
    const b = []
    //     s
    // [1, 4, 5, 6, 3]
    //           e
    // 1 3 4 6 5
    while (start < end ) {
        // console.log(a)
        if (a[start] < a[end]) {
            b.push(a[start], a[end])
            start++
            end--
        }
        console.log(b, b[b.length - 1])
        console.log(a[start], a[end])
        if (b[b.length - 1] > a[end] && a.length !== b.length) {
            b.push(a[start])
            console.log("25",b)
            return false
        } 

    }
    return true
}
// b[0] is equal to a[0];
// b[1] is equal a[a.length-1]
// b[2] is equal to a[1]
// b[3] is equal a[a.length-2]
// b[4] is equal to a[2]
// b[5] is equal a[a.length-3]

// sort?
/*
        s
a = [1, 3, 5, 6, 4, 2]  
                 e
*/
//b = [1, 2, 3, 4, 5, 6]
a = [1, 3, 5, 6, 4, 2]
//solution(a) = true
console.log(solution(a))

a1 = [1, 4, 5, 6, 3]
//[1, 3, 4, 6, 5]
console.log(solution(a1))
// You are given an array of integers a. A new array b is generated by rearranging the elements of a in the following way:

// b[0] is equal to a[0];
// b[1] is equal to the last element of a;
// b[2] is equal to a[1];
// b[3] is equal to the second-last element of a;
// b[4] is equal to a[2];
// b[5] is equal to the third-last element of a;
// and so on.
// Your task is to determine whether the new array b is sorted in strictly ascending order or not.
// Example

// For a = [1, 3, 5, 6, 4, 2], the output should be solution(a) = true.

// The new array b will look like [1, 2, 3, 4, 5, 6], which is in strictly ascending order, so the answer is true.

// For a = [1, 4, 5, 6, 3], the output should be solution(a) = false.

// The new array b will look like [1, 3, 4, 6, 5], which is not in strictly ascending order, so the answer is false.

